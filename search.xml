<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hexo加密</title>
    <url>/2024/05/05/37/</url>
    <content><![CDATA[<h1 id="hexo-blog-encrypt"><a href="#hexo-blog-encrypt" class="headerlink" title="hexo-blog-encrypt"></a>hexo-blog-encrypt</h1><p><img src="https://img.shields.io/github/v/release/D0n9x1n/hexo-blog-encrypt?include_prereleases" alt="GitHub release (latest SemVer including pre-releases)"><br><a href="https://scrutinizer-ci.com/g/MikeCoder/hexo-blog-encrypt/build-status/master"><img src="https://scrutinizer-ci.com/g/MikeCoder/hexo-blog-encrypt/badges/build.png?b=master" alt="Build Status"></a><br><a href="https://scrutinizer-ci.com/g/MikeCoder/hexo-blog-encrypt/?branch=master"><img src="https://scrutinizer-ci.com/g/MikeCoder/hexo-blog-encrypt/badges/quality-score.png?b=master" alt="Scrutinizer Code Quality"></a></p>
<h4 id="提-issue-之前，请务必提供复现方式，log，配置信息等必要信息。良好的-issue-可以节省双方的时间。"><a href="#提-issue-之前，请务必提供复现方式，log，配置信息等必要信息。良好的-issue-可以节省双方的时间。" class="headerlink" title="提 issue 之前，请务必提供复现方式，log，配置信息等必要信息。良好的 issue 可以节省双方的时间。"></a>提 issue 之前，请务必提供复现方式，log，配置信息等必要信息。良好的 issue 可以节省双方的时间。</h4><p><em>请严格按照模版要求，不明确的 issue 将直接关闭。</em></p>
<p><strong>参考 issue:</strong></p>
<blockquote>
<ul>
<li><a href="https://github.com/MikeCoder/hexo-blog-encrypt/issues/83">Issue 83</a></li>
<li><a href="https://github.com/MikeCoder/hexo-blog-encrypt/issues/68">Issue 68</a></li>
</ul>
</blockquote>
<h2 id="这是个啥"><a href="#这是个啥" class="headerlink" title="这是个啥"></a>这是个啥</h2><ul>
<li><del>首先, 这是 Hexo 生态圈中 <strong>最好的</strong> 博客加密插件</del></li>
<li>你可能需要写一些私密的博客, 通过密码验证的方式让人不能随意浏览.</li>
<li>这在 wordpress, emlog 或是其他博客系统中都很容易实现, 然而 hexo 除外. :(</li>
<li>为了解决这个问题, 让我们有请 “hexo-blog-encrypt”.</li>
</ul>
<h2 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h2><ul>
<li>一旦你输入了正确的密码, 它将会被存储在本地浏览器的 localStorage中. 按个按钮, 密码将会被清空. 若博客中有脚本, 它将会被正确地执行.</li>
<li>支持按标签加密.</li>
<li>所有的核心功能都是由原生的 API 所提供的. 在 Node.js中, 我们使用 <a href="https://nodejs.org/dist/latest-v12.x/docs/api/crypto.html">Crypto</a>. 在浏览器中, 我们使用 <a href="https://developer.mozilla.org/en-US/docs/Web/API/Web_Crypto_API">Web Crypto API</a>.</li>
<li><a href="https://tools.ietf.org/html/rfc2898">PBKDF2</a>, <a href="https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf">SHA256</a> 被用于分发密钥, <a href="https://csrc.nist.gov/publications/detail/sp/800-38a/final">AES256-CBC</a> 被用于加解密, 我们还使用 <a href="https://csrc.nist.gov/csrc/media/publications/fips/198/1/final/documents/fips-198-1_final.pdf">HMAC</a> 来验证密文的来源, 并确保其未被篡改.</li>
<li>我们广泛地使用 Promise 来进行异步操作, 以此确保线程不被阻塞.</li>
<li>加密页面多主题支持, 现在已经支持的主题有 [<code>default</code>, <code>xray</code>], 更多的主题正在开发中.</li>
<li>过时的浏览器将不能正常显示, 因此, 请升级您的浏览器.</li>
</ul>
<h2 id="在线演示"><a href="#在线演示" class="headerlink" title="在线演示"></a>在线演示</h2><ul>
<li>点击 <a href="https://mhexo.github.io/">Demo Page</a>, <strong>所有的密码都是 <code>hello</code></strong>.</li>
</ul>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><ul>
<li><code>npm install --save hexo-blog-encrypt</code></li>
<li>或 <code>yarn add hexo-blog-encrypt</code> (需要) <a href="https://yarnpkg.com/en/">Yarn</a>)</li>
</ul>
<h2 id="快速使用"><a href="#快速使用" class="headerlink" title="快速使用"></a>快速使用</h2><ul>
<li>将 “password” 字段添加到您文章信息头就像这样.</li>
</ul>
<figure class="highlight markdown"><table><tbody><tr><td class="code"><pre><code class="hljs markdown"><br>---<br>title: Hello World<br>date: 2016-03-30 21:18:02<br><span class="hljs-section">password: hello</span><br><span class="hljs-section">---</span><br><br></code></pre></td></tr></tbody></table></figure>

<ul>
<li>再使用 <code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</code> 在本地预览加密的文章.</li>
</ul>
<h2 id="设置优先级"><a href="#设置优先级" class="headerlink" title="设置优先级"></a>设置优先级</h2><p>文章信息头 &gt; 按标签加密</p>
<h2 id="高级设置"><a href="#高级设置" class="headerlink" title="高级设置"></a>高级设置</h2><h3 id="文章信息头"><a href="#文章信息头" class="headerlink" title="文章信息头"></a>文章信息头</h3><figure class="highlight markdown"><table><tbody><tr><td class="code"><pre><code class="hljs markdown"><br>---<br>title: Hello World<br>tags:<br><span class="hljs-bullet">-</span> 作为日记加密<br>date: 2016-03-30 21:12:21<br>password: mikemessi<br>abstract: 有东西被加密了, 请输入密码查看.<br>message: 您好, 这里需要密码.<br>wrong<span class="hljs-emphasis">_pass_</span>message: 抱歉, 这个密码看着不太对, 请再试试.<br><span class="hljs-section">wrong<span class="hljs-emphasis">_hash_</span>message: 抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.</span><br><span class="hljs-section">---</span><br><br></code></pre></td></tr></tbody></table></figure>

<h3 id="config-yml"><a href="#config-yml" class="headerlink" title="_config.yml"></a><code>_config.yml</code></h3><h4 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h4><figure class="highlight yaml"><table><tbody><tr><td class="code"><pre><code class="hljs yaml"><br><span class="hljs-comment"># Security</span><br><span class="hljs-attr">encrypt:</span> <span class="hljs-comment"># hexo-blog-encrypt</span><br>  <span class="hljs-attr">abstract:</span> <span class="hljs-string">有东西被加密了,</span> <span class="hljs-string">请输入密码查看.</span><br>  <span class="hljs-attr">message:</span> <span class="hljs-string">您好,</span> <span class="hljs-string">这里需要密码.</span><br>  <span class="hljs-attr">tags:</span><br>  <span class="hljs-bullet">-</span> {<span class="hljs-attr">name:</span> <span class="hljs-string">tagName</span>, <span class="hljs-attr">password:</span> <span class="hljs-string">密码A</span>}<br>  <span class="hljs-bullet">-</span> {<span class="hljs-attr">name:</span> <span class="hljs-string">tagName</span>, <span class="hljs-attr">password:</span> <span class="hljs-string">密码B</span>}<br>  <span class="hljs-attr">wrong_pass_message:</span> <span class="hljs-string">抱歉,</span> <span class="hljs-string">这个密码看着不太对,</span> <span class="hljs-string">请再试试.</span><br>  <span class="hljs-attr">wrong_hash_message:</span> <span class="hljs-string">抱歉,</span> <span class="hljs-string">这个文章不能被校验,</span> <span class="hljs-string">不过您还是能看看解密后的内容.</span><br><br></code></pre></td></tr></tbody></table></figure>

<h4 id="对博文禁用-Tag-加密"><a href="#对博文禁用-Tag-加密" class="headerlink" title="对博文禁用 Tag 加密"></a>对博文禁用 Tag 加密</h4><p>只需要将博文头部的 <code>password</code> 设置为 <code>""</code> 即可取消 Tag 加密.</p>
<p>Example:</p>
<figure class="highlight yaml"><table><tbody><tr><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">Callback</span> <span class="hljs-string">Test</span><br><span class="hljs-attr">date:</span> <span class="hljs-number">2019-12-21 11:54:07</span><br><span class="hljs-attr">tags:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">A</span> <span class="hljs-string">Tag</span> <span class="hljs-string">should</span> <span class="hljs-string">be</span> <span class="hljs-string">encrypted</span><br><span class="hljs-attr">password:</span> <span class="hljs-string">""</span><br><span class="hljs-meta">---</span><br><span class="hljs-meta"></span><br><span class="hljs-string">Use</span> <span class="hljs-string">a</span> <span class="hljs-string">""</span> <span class="hljs-string">to</span> <span class="hljs-string">diable</span> <span class="hljs-string">tag</span> <span class="hljs-string">encryption.</span><br></code></pre></td></tr></tbody></table></figure>

<h3 id="配置优先级"><a href="#配置优先级" class="headerlink" title="配置优先级"></a>配置优先级</h3><p>文章信息头 &gt; <code>_config.yml</code> (站点根目录下的) &gt; 默认配置</p>
<h3 id="关于-Callback-函数"><a href="#关于-Callback-函数" class="headerlink" title="关于 Callback 函数"></a>关于 Callback 函数</h3><p>在部分博客中, 解密后部分元素可能无法正常显示或者表现, 这属于已知问题. 目前的解决办法是通过自行查阅自己的博客中的代码, 了解到在 onload 事件发生时调用了哪些函数, 并将这些函数挑选后写入到博客内容中. 如:</p>
<figure class="highlight yaml"><table><tbody><tr><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">Callback</span> <span class="hljs-string">Test</span><br><span class="hljs-attr">date:</span> <span class="hljs-number">2019-12-21 11:54:07</span><br><span class="hljs-attr">tags:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">Encrypted</span><br><span class="hljs-meta">---</span><br><span class="hljs-meta"></span><br><span class="hljs-attr">This is a blog to test Callback functions. You just need to add code at the last of your post like following:</span><br><br><span class="hljs-string">It</span> <span class="hljs-string">will</span> <span class="hljs-string">be</span> <span class="hljs-string">called</span> <span class="hljs-string">after</span> <span class="hljs-string">the</span> <span class="hljs-string">blog</span> <span class="hljs-string">decrypted.</span><br><br><span class="hljs-string">&lt;script&gt;</span><br>    <span class="hljs-string">//</span> <span class="hljs-string">添加一个</span> <span class="hljs-string">script</span> <span class="hljs-string">tag</span> <span class="hljs-string">与代码在文章末尾.</span><br>    <span class="hljs-string">alert("Hello</span> <span class="hljs-string">World");</span><br><span class="hljs-string">&lt;/script&gt;</span><br></code></pre></td></tr></tbody></table></figure>

<p>例子在: <a href="https://mhexo.github.io/2020/12/06/Callback-Test/">Callback 例子</a>.</p>
<h3 id="解密后的触发事件"><a href="#解密后的触发事件" class="headerlink" title="解密后的触发事件"></a>解密后的触发事件</h3><p>感谢 @<a href="https://github.com/f-dong">f-dong</a>, 我们现在会在解密完成后触发一个 <code>hexo-blog-decrypt</code> 事件, 你们可以编写 callback 来监听该事件.</p>
<figure class="highlight oxygene"><table><tbody><tr><td class="code"><pre><code class="hljs oxygene"><span class="hljs-comment">// trigger event</span><br><span class="hljs-keyword">var</span> <span class="hljs-keyword">event</span> = <span class="hljs-keyword">new</span> <span class="hljs-keyword">Event</span>(<span class="hljs-string">'hexo-blog-decrypt'</span>)<span class="hljs-punctuation">;</span><br>window.dispatchEvent(<span class="hljs-keyword">event</span>)<span class="hljs-punctuation">;</span><br></code></pre></td></tr></tbody></table></figure>

<h3 id="对-TOC-进行加密"><a href="#对-TOC-进行加密" class="headerlink" title="对 TOC 进行加密"></a>对 TOC 进行加密</h3><p>如果你有一篇文章使用了 TOC，你需要修改模板的部分代码。这里用 landscape 作为例子：</p>
<ul>
<li>你可以在 hexo/themes/landscape/layout/_partial/article.ejs 找到 article.ejs。</li>
<li>然后找到 &lt;% post.content %&gt; 这段代码，通常在30行左右。</li>
<li>使用如下的代码来替代它:</li>
</ul>
<figure class="highlight xquery"><table><tbody><tr><td class="code"><pre><code class="hljs xquery">&lt;% <span class="hljs-keyword">if</span>(post.toc ==<span class="hljs-built_in"> true</span>){ %&gt;<br>  &lt;div<span class="hljs-built_in"> id</span>=<span class="hljs-string">"toc-div"</span> class=<span class="hljs-string">"toc-article"</span> &lt;% <span class="hljs-keyword">if</span> (post.encrypt ==<span class="hljs-built_in"> true</span>) { %&gt;style=<span class="hljs-string">"display:none"</span> &lt;% } %&gt;&gt;<br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">strong</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"toc-title"</span>&gt;</span>Index<span class="hljs-tag">&lt;/<span class="hljs-name">strong</span>&gt;</span></span><br>      &lt;% <span class="hljs-keyword">if</span> (post.encrypt ==<span class="hljs-built_in"> true</span>) { %&gt;<br>        &lt;<span class="hljs-meta">%-</span> toc(post.origin, {list_number:<span class="hljs-built_in"> true</span>}) %&gt;<br>      &lt;% } <span class="hljs-keyword">else</span> { %&gt;<br>        &lt;<span class="hljs-meta">%-</span> toc(post.content, {list_number:<span class="hljs-built_in"> true</span>}) %&gt;<br>      &lt;% } %&gt;<br>  &lt;/div&gt;<br>&lt;% } %&gt;<br>&lt;<span class="hljs-meta">%-</span> post.content %&gt;<br></code></pre></td></tr></tbody></table></figure>

<h3 id="禁用-Log"><a href="#禁用-Log" class="headerlink" title="禁用 Log"></a>禁用 Log</h3><p>If you want to disable the logging, you can add a silent property in <code>_config.yml</code> and set it to true.<br>如果你想要禁止使用 Log, 你可以在 <code>_config.yml</code> 中增加一个 silent 属性, 并将其设置为 true.</p>
<figure class="highlight yaml"><table><tbody><tr><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># Security</span><br><span class="hljs-attr">encrypt:</span> <span class="hljs-comment"># hexo-blog-encrypt</span><br>  <span class="hljs-attr">silent:</span> <span class="hljs-literal">true</span><br></code></pre></td></tr></tbody></table></figure>

<p>这样就会禁止如 <code>INFO  hexo-blog-encrypt: encrypting "{Blog Name}" based on Tag: "EncryptedTag".</code> 的日志.</p>
<h3 id="加密主题"><a href="#加密主题" class="headerlink" title="加密主题"></a>加密主题</h3><p>之前, 我们尝试使用 <code>template</code> 关键字来让用户能修改自己的主题. 后来发现真不是一个好主意. 所以我们现在引入了主题: <code>theme</code> 关键字.</p>
<p>你可以简单的使用 <code>theme</code> 在 <code>_config.yml</code> 里或者文章头, 如下:</p>
<h3 id="文章信息头-1"><a href="#文章信息头-1" class="headerlink" title="文章信息头"></a>文章信息头</h3><figure class="highlight markdown"><table><tbody><tr><td class="code"><pre><code class="hljs markdown"><br>---<br>title: Hello World<br>tags:<br><span class="hljs-bullet">-</span> 作为日记加密<br>date: 2016-03-30 21:12:21<br>password: mikemessi<br>abstract: 有东西被加密了, 请输入密码查看.<br>message: 您好, 这里需要密码.<br>theme: xray<br>wrong<span class="hljs-emphasis">_pass_</span>message: 抱歉, 这个密码看着不太对, 请再试试.<br><span class="hljs-section">wrong<span class="hljs-emphasis">_hash_</span>message: 抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.</span><br><span class="hljs-section">---</span><br><br></code></pre></td></tr></tbody></table></figure>

<h3 id="在-config-yml"><a href="#在-config-yml" class="headerlink" title="在 _config.yml"></a>在 <code>_config.yml</code></h3><h4 id="示例-1"><a href="#示例-1" class="headerlink" title="示例"></a>示例</h4><figure class="highlight yaml"><table><tbody><tr><td class="code"><pre><code class="hljs yaml"><br><span class="hljs-comment"># Security</span><br><span class="hljs-attr">encrypt:</span> <span class="hljs-comment"># hexo-blog-encrypt</span><br>  <span class="hljs-attr">abstract:</span> <span class="hljs-string">有东西被加密了,</span> <span class="hljs-string">请输入密码查看.</span><br>  <span class="hljs-attr">message:</span> <span class="hljs-string">您好,</span> <span class="hljs-string">这里需要密码.</span><br>  <span class="hljs-attr">tags:</span><br>  <span class="hljs-bullet">-</span> {<span class="hljs-attr">name:</span> <span class="hljs-string">tagName</span>, <span class="hljs-attr">password:</span> <span class="hljs-string">密码A</span>}<br>  <span class="hljs-bullet">-</span> {<span class="hljs-attr">name:</span> <span class="hljs-string">tagName</span>, <span class="hljs-attr">password:</span> <span class="hljs-string">密码B</span>}<br>  <span class="hljs-attr">theme:</span> <span class="hljs-string">xray</span><br>  <span class="hljs-attr">wrong_pass_message:</span> <span class="hljs-string">抱歉,</span> <span class="hljs-string">这个密码看着不太对,</span> <span class="hljs-string">请再试试.</span><br>  <span class="hljs-attr">wrong_hash_message:</span> <span class="hljs-string">抱歉,</span> <span class="hljs-string">这个文章不能被校验,</span> <span class="hljs-string">不过您还是能看看解密后的内容.</span><br><br></code></pre></td></tr></tbody></table></figure>

<p>你可以在线挑选你喜欢的主题,并应用到你的博客中:</p>
<ul>
<li><a href="https://mhexo.github.io/2020/12/23/Theme-Test-Default/">default</a></li>
<li><a href="https://mhexo.github.io/2020/12/23/Theme-Test-Blink/">blink</a></li>
<li><a href="https://mhexo.github.io/2020/12/23/Theme-Test-Shrink/">shrink</a></li>
<li><a href="https://mhexo.github.io/2020/12/23/Theme-Test-Flip/">flip</a></li>
<li><a href="https://mhexo.github.io/2020/12/23/Theme-Test-Up/">up</a></li>
<li><a href="https://mhexo.github.io/2020/12/23/Theme-Test-Surge/">surge</a></li>
<li><a href="https://mhexo.github.io/2020/12/23/Theme-Test-Wave/">wave</a></li>
<li><a href="https://mhexo.github.io/2020/12/23/Theme-Test-Xray/">xray</a></li>
</ul>
<h2 id="许可"><a href="#许可" class="headerlink" title="许可"></a>许可</h2><p>看看 <a href="./LICENSE">LICENSE</a>.</p>
<h2 id="感谢"><a href="#感谢" class="headerlink" title="感谢"></a>感谢</h2><p>Collaborator - <a href="https://github.com/xiazeyu">xiazeyu</a></p>
]]></content>
  </entry>
  <entry>
    <title>Linux 常用命令</title>
    <url>/2024/04/22/00/</url>
    <content><![CDATA[<h1 id="Linux-常用命令"><a href="#Linux-常用命令" class="headerlink" title="Linux 常用命令"></a>Linux 常用命令</h1><h3 id="1-Linux-目录结构"><a href="#1-Linux-目录结构" class="headerlink" title="1. Linux 目录结构"></a>1. Linux 目录结构</h3><blockquote>
<p>Linux 目录结构不分盘分区，仅有一个【根目录 /】作为整个 Linux 文件系统/目录结构的开端，根据不同的功能划分不同的文件夹，已【树状】结构分别整个文件系统. 根目录以后很多文件夹，例如: lib，dev，sys… 对于用户而言最重要的是 <strong>home 目录的个人文件夹</strong>。</p>
<p>主要的目录:</p>
<ul>
<li>/ 根目录，整个 Linux 系统文件结构的开端</li>
<li>~ 用户家目录，对应的真实路径是 /home/用户名个人目录，例如: /home/qf。除了系统相关配置，大多数操作都是在家目录完成的。</li>
</ul>
</blockquote>
<h3 id="2-路径关系"><a href="#2-路径关系" class="headerlink" title="2. 路径关系"></a>2. 路径关系</h3><blockquote>
<p>相对路径:</p>
<ul>
<li>生活案例: 我在隔壁办公室，我在前台，我在校区门口</li>
<li>已当前所在位置为参照物去往某一个路径的【捷径】</li>
</ul>
<p>绝对路径:</p>
<ul>
<li>生活案例：河南省郑州市高新区莲花街 55 号威科姆院区 D 座 5 楼千锋教育</li>
<li>是以整体根目录概念完成的路径关系。</li>
</ul>
</blockquote>
<blockquote>
<p>开发中对应的路径关系</p>
<p>相对路径补充知识点:</p>
<ul>
<li><code>.</code>    表示当前工作目录</li>
<li><code>..</code>  表示当前工作目录的上级目录</li>
</ul>
<p>相对路径和绝对路径案例</p>
<ul>
<li>绝对路径，例如:<ul>
<li>/home/qf,</li>
<li>/home/qf/桌面，</li>
<li>/home/qf/桌面/aaa。</li>
<li><strong>所有的路径都是从【根目录 / 开始】</strong></li>
</ul>
</li>
<li>相对路径，例如:<ul>
<li>../aaa [上级目录中的 aaa 文件夹]</li>
<li>../aaa/1.txt [上级目录中的 aaa 文件夹 1.txt 文件]</li>
<li>./bbb/1.txt [当前工作目录中的 bbb 文件夹内的 1.txt 文件]</li>
<li><strong>所有的路径非 / 根目录开始</strong></li>
</ul>
</li>
</ul>
</blockquote>
<h3 id="3-Linux-常用命令"><a href="#3-Linux-常用命令" class="headerlink" title="3. Linux 常用命令"></a>3. Linux 常用命令</h3><h4 id="3-1-路径切换-cd"><a href="#3-1-路径切换-cd" class="headerlink" title="3.1 路径切换 cd"></a>3.1 路径切换 cd</h4><blockquote>
<p>修改当前工作目录，命令操作针对的文件夹。Linux 环境中默认终端打开【工作目录】为【家目录 ~】</p>
</blockquote>
<figure class="highlight shell"><table><tbody><tr><td class="code"><pre><code class="hljs shell">qf@qf:~$<br><span class="hljs-meta prompt_"># </span><span class="language-bash">qf 表示用户名</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">@qf 表示当前用户所在用户组</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">: 之后是当前工作路径，</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">~ 表示当前用户的家目录</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">$ 之后是 Linux 命令</span><br></code></pre></td></tr></tbody></table></figure>

<blockquote>
<p>命令案例</p>
</blockquote>
<figure class="highlight shell"><table><tbody><tr><td class="code"><pre><code class="hljs shell">qf@qf:~$ cd 桌面 <br><span class="hljs-meta prompt_">	# </span><span class="language-bash">切换到桌面文件夹</span><br>qf@qf:~/桌面$ cd / <br><span class="hljs-meta prompt_">	# </span><span class="language-bash">直接将工作目录跳转到根目录中</span><br>qf@qf:/$ cd  <br><span class="hljs-meta prompt_">	# </span><span class="language-bash">没有任何内容，可以快速回到家目录</span><br>qf@qf:~$ cd 桌面<br>qf@qf:~/桌面$ cd aaa/bbb/ccc <br><span class="hljs-meta prompt_">	# </span><span class="language-bash">可以根据文件的真实路径情况，连续切换工作目录</span><br>qf@qf:~/桌面/aaa/bbb/ccc$ cd - <br><span class="hljs-meta prompt_">	# </span><span class="language-bash">可以回到上一次访问当前工作目录的路径</span><br>/home/qf/桌面 <br><span class="hljs-meta prompt_">	# </span><span class="language-bash">上一次工作目录路径</span><br>qf@qf:~/桌面$ cd -<br>/home/qf/桌面/aaa/bbb/ccc<br>qf@qf:~/桌面/aaa/bbb/ccc$ <br></code></pre></td></tr></tbody></table></figure>

<h4 id="3-3-查看文件夹内容-ls"><a href="#3-3-查看文件夹内容-ls" class="headerlink" title="3.3 查看文件夹内容 ls"></a>3.3 查看文件夹内容 ls</h4><blockquote>
<p>可以查看当前工作目录下的文件和文件夹情况，也可以加入命令参数，提供其他的必要数据.</p>
</blockquote>
<blockquote>
<p>命令案例</p>
</blockquote>
<figure class="highlight shell"><table><tbody><tr><td class="code"><pre><code class="hljs shell">qf@qf:~$ ls <br><span class="hljs-meta prompt_">	# </span><span class="language-bash">查看当前工作目录下的非隐藏文件和文件夹名称</span><br>qf@qf:~$ ls -a <br><span class="hljs-meta prompt_">	# </span><span class="language-bash">查看当前工作目录下的所有文件和文件夹名称，包括隐藏文件</span><br>qf@qf:~$ ls -l <br><span class="hljs-meta prompt_">	# </span><span class="language-bash">列表详情模式查看目录下的非隐藏文件和文件夹信息</span><br>qf@qf:~$ ls -al <br><span class="hljs-meta prompt_">	# </span><span class="language-bash">列表详情模式查看目录下的所有文件和文件夹信息，包括隐藏文件</span><br></code></pre></td></tr></tbody></table></figure>

<blockquote>
<p>列表模式下内容详解</p>
</blockquote>
<p><img src="https://dlink.host/sharepoint/aHR0cHM6Ly94aXV0cmltLW15LnNoYXJlcG9pbnQuY29tLzppOi9nL3BlcnNvbmFsL2JfeGl1dHJpbV9vbm1pY3Jvc29mdF9jb20vRVhtNk9ONjdVakZLcmhFLXJXU1hhem9CNHE0b1RNUXhlTlFhR3NTcENwQkVzZz9lPVRrUUFTTw.png" alt="18-终端列表模式查看文件效果"></p>
<h4 id="3-4-创建文件-touch-和创建文件夹-mkdir"><a href="#3-4-创建文件-touch-和创建文件夹-mkdir" class="headerlink" title="3.4 创建文件 touch 和创建文件夹 mkdir"></a>3.4 创建文件 touch 和创建文件夹 mkdir</h4><blockquote>
<p>touch 用于创建普通文件，注意事项:</p>
<ul>
<li>一般情况下，普通文件的完整名称需要文件名.文件后缀名</li>
<li>特殊情况下，有些文件没有后缀名，例如 日志文件，配置文件，锁文件，状态文件，但是以上文件都是文本文件，有对应的文件格式和限制。</li>
<li>如果是隐藏文件，需要在文件之前加入 <code>.</code>  开头</li>
</ul>
<p>mkdir 用于创建文件夹。注意事项</p>
<ul>
<li>如果是隐藏文件夹，需要在文件夹名称之前加入 <code>.</code>  开头</li>
</ul>
</blockquote>
<blockquote>
<p>命令案例</p>
</blockquote>
<figure class="highlight shell"><table><tbody><tr><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">文件夹案例</span><br>qf@qf:~/桌面$ mkdir aaa  <br><span class="hljs-meta prompt_">	# </span><span class="language-bash">在桌面创建 aaa 文件夹</span><br>qf@qf:~/桌面/aaa$ mkdir a b c d e f g <br><span class="hljs-meta prompt_">	# </span><span class="language-bash">在桌面中 aaa 文件夹中，同时创建多个文件夹，不同的文件夹名称使用空格隔开</span><br>qf@qf:~/桌面/aaa$ mkdir .hidden <br><span class="hljs-meta prompt_">	# </span><span class="language-bash">在桌面中 aaa 文件夹中，创建一个隐藏文件夹</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">文件操作</span><br>qf@qf:~/桌面/aaa$ touch 1.txt<br><span class="hljs-meta prompt_">	# </span><span class="language-bash">在当前工作目录下创建 1.txt 文件</span><br>qf@qf:~/桌面/aaa$ touch 1.txt <br><span class="hljs-meta prompt_">	# </span><span class="language-bash">在当前工作目录下创建 1.txt 文件，因为 1.txt 已存在，终端不会有任何的错误提示，</span><br><span class="hljs-meta prompt_">	# </span><span class="language-bash">同时对原本的文件没有任何的影响，不是覆盖，或者说删除重建操作。</span><br>qf@qf:~/桌面/aaa$ touch 1.c 1.doc 1.png 1.jpg <br><span class="hljs-meta prompt_">	# </span><span class="language-bash">批量创建多个文件</span><br>qf@qf:~/桌面/aaa$ touch .1.txt <br><span class="hljs-meta prompt_">	# </span><span class="language-bash">创建隐藏文件</span><br></code></pre></td></tr></tbody></table></figure>

<h4 id="3-5-复制操作-cp-和剪切移动操作-mv"><a href="#3-5-复制操作-cp-和剪切移动操作-mv" class="headerlink" title="3.5 复制操作 cp 和剪切移动操作 mv"></a>3.5 复制操作 cp 和剪切移动操作 mv</h4><blockquote>
<p>cp 复制文件或者文件夹</p>
<p>mv 剪切移动文件或者文件夹，也可以用于重命名</p>
</blockquote>
<blockquote>
<p>cp 复制/拷贝命令案例</p>
</blockquote>
<figure class="highlight shell"><table><tbody><tr><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">【<span class="hljs-built_in">cp</span> 操作普通文件】</span><br>qf@qf:~/桌面/aaa$ cp 1.txt 2.txt <br><span class="hljs-meta prompt_">	# </span><span class="language-bash">当前 1.txt 复制文件，目标文件名称为 2.txt，在当前工作目录下完成</span><br>qf@qf:~/桌面/aaa$ mkdir a <br><span class="hljs-meta prompt_">	# </span><span class="language-bash">创建 a 文件夹</span><br>qf@qf:~/桌面/aaa$ cp 1.txt ./a/3.txt <br><span class="hljs-meta prompt_">	# </span><span class="language-bash">当前 1.txt 复制文件，目标文件在当前工作目录下 a 文件夹中的，同时目标文件名称为 3.txt</span><br>qf@qf:~/桌面/aaa$ cp 1.txt ./a <br><span class="hljs-meta prompt_">	# </span><span class="language-bash">当前 1.txt 复制文件，直接复制到当前工作目录下的 a 文件中，文件名保持不变</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">【<span class="hljs-built_in">cp</span> 操作文件夹】</span><br>qf@qf:~/桌面/aaa$ cp a b <br><span class="hljs-meta prompt_">	# </span><span class="language-bash">没有使用命令行参数，无法完成文件夹 <span class="hljs-built_in">cp</span> 操作</span><br>cp: 略过目录'a' <br><span class="hljs-meta prompt_">	# </span><span class="language-bash">没有命令行参数提示错误</span><br>qf@qf:~/桌面/aaa$ cp -rf a b <br><span class="hljs-meta prompt_">	# </span><span class="language-bash">添加命令行参数 -rf，<span class="hljs-built_in">cp</span> 可以操作文件夹内容，a 文件夹存在，b 文件夹不存在，当前操</span><br><span class="hljs-meta prompt_">	# </span><span class="language-bash">作是将 a 文件夹包括内容复制一份，同时创建目标文件夹 b ，b 文件夹内容和 a 一致。</span><br>qf@qf:~/桌面/aaa$ cp -rf a c<br><span class="hljs-meta prompt_">	# </span><span class="language-bash">添加命令行参数 -rf，<span class="hljs-built_in">cp</span> 可以操作文件夹内容，a 文件夹存在，c 文件夹存在，</span><br><span class="hljs-meta prompt_">	# </span><span class="language-bash">当前操作是将 a 文件夹整体复制一份放入到 c 文件夹中</span><br></code></pre></td></tr></tbody></table></figure>

<blockquote>
<p>mv 剪切/移动命令案例</p>
</blockquote>
<figure class="highlight shell"><table><tbody><tr><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">【<span class="hljs-built_in">mv</span> 操作普通文件】</span><br>qf@qf:~/桌面/aaa$ mv 1.txt 3.txt<br><span class="hljs-meta prompt_">	# </span><span class="language-bash">1.txt 文件存在，3.txt 文件不存在，当前操作是将 1.txt 重命名为 3.txt</span><br>qf@qf:~/桌面/aaa$ mv 1.txt c<br><span class="hljs-meta prompt_">	# </span><span class="language-bash">1.txt 移动到 c 文件夹中</span><br>qf@qf:~/桌面/aaa$ mv 1.txt c/101.txt <br><span class="hljs-meta prompt_">	# </span><span class="language-bash">1.txt 移动到 c 文件夹中，同时重命名为 101.txt</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">【<span class="hljs-built_in">mv</span> 操作文件夹】</span><br>qf@qf:~/桌面/aaa$ mv a b<br><span class="hljs-meta prompt_">	# </span><span class="language-bash">a 文件夹存在，b 文件夹不存在，将 a 文件夹重命名为 b</span> <br>qf@qf:~/桌面/aaa$ mv b c<br><span class="hljs-meta prompt_">	# </span><span class="language-bash">b 文件夹存在，c 文件夹存在，将 b 文件夹移动到 c 文件夹中</span><br></code></pre></td></tr></tbody></table></figure>

<h4 id="3-6-删除操作-rm【慎用】"><a href="#3-6-删除操作-rm【慎用】" class="headerlink" title="3.6 删除操作 rm【慎用】"></a>3.6 删除操作 rm【慎用】</h4><blockquote>
<p>删除文件或者文件夹</p>
<ul>
<li>【慎用】rm 操作是直接在磁盘中抹掉对应文件或者文件夹数据，并不是放入到回收站中。一旦删除无法找回！！！</li>
</ul>
</blockquote>
<blockquote>
<p>rm 删除文件或者文件夹操作案例</p>
</blockquote>
<figure class="highlight shell"><table><tbody><tr><td class="code"><pre><code class="hljs shell">qf@qf:~/桌面/aaa$ rm 1.c <br><span class="hljs-meta prompt_">	# </span><span class="language-bash">删除指定文件，要求提供文件名和文件类型名称</span><br>qf@qf:~/桌面/aaa$ rm 1.*<br><span class="hljs-meta prompt_">	# </span><span class="language-bash">删除当前工作目录下的所有，文件名为 1 ，文件类型不限制的所有文件</span><br>qf@qf:~/桌面/aaa$ rm *.txt<br><span class="hljs-meta prompt_">	# </span><span class="language-bash">删除当前工作目录下的所有文件后缀名为 .txt 普通文件</span><br>qf@qf:~/桌面/aaa$ rm *.*<br><span class="hljs-meta prompt_">	# </span><span class="language-bash">删除当前工作目录下的所有普通文件，但是不包括【隐藏文件】</span><br></code></pre></td></tr></tbody></table></figure>

<figure class="highlight sh"><table><tbody><tr><td class="code"><pre><code class="hljs sh">qf@qf:~/桌面/aaa$ <span class="hljs-built_in">rm</span> a<br>	<span class="hljs-comment"># a 是一个文件夹，当前 rm 操作无法直接删除文件夹</span><br><span class="hljs-built_in">rm</span>: 无法删除<span class="hljs-string">'a'</span>: 是一个目录<br>qf@qf:~/桌面/aaa$ <span class="hljs-built_in">rm</span> -rf a<br>	<span class="hljs-comment"># 需要加入命令参数，对文件夹进行删除操作</span><br>qf@qf:~/桌面/aaa$ <span class="hljs-built_in">rm</span> -rf *<br>	<span class="hljs-comment"># 整个指令中加入了命令行参数 -rf ，当前指令可以删除工作目录下的所有文件和文件夹，但是不</span><br>	<span class="hljs-comment"># 包括隐藏文件和隐藏文件夹</span><br></code></pre></td></tr></tbody></table></figure>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>终端命令</tag>
      </tags>
  </entry>
  <entry>
    <title>MarkDown 语法教程</title>
    <url>/2024/05/08/00/</url>
    <content><![CDATA[<h1 id="MarkDown-文档格式"><a href="#MarkDown-文档格式" class="headerlink" title="MarkDown 文档格式"></a>MarkDown 文档格式</h1><blockquote>
<p>基于 HTML 技术在程序员之间非常流行的一种文档形式，广泛用于各大程序社区，例如 CSDN，GitHub，简书，stackoverflow。支持文本，代码块，引用，图片，超链接，表格…</p>
</blockquote>
<h3 id="1-标题"><a href="#1-标题" class="headerlink" title="1. 标题"></a>1. 标题</h3><blockquote>
<p>MarkDown 标题形式和 HTML 文件标题一致，都是 6 级标题，一级标题到六级标题，对应快捷键是 **<code>Ctrl + 1 ~ Ctrl + 6</code>**，也可以使用源码模式 # 开头，# 个数决定标题的级别</p>
</blockquote>
<p><img src="https://dlink.host/sharepoint/aHR0cHM6Ly94aXV0cmltLW15LnNoYXJlcG9pbnQuY29tLzppOi9nL3BlcnNvbmFsL2JfeGl1dHJpbV9vbm1pY3Jvc29mdF9jb20vRWVZaU9UTVhidUZQdkt4V2FjQ1UzV0lCai0zZV9DdHJtbW5Pdl84SmRlejU2UT9lPVBxc3R0OA.png"></p>
<h3 id="2-引用"><a href="#2-引用" class="headerlink" title="2. 引用"></a>2. 引用</h3><blockquote>
<p>目前内容对于当前文本就是引用模式，一般用于解释内容。快捷键是 **<code>Ctrl + Shift + Q</code>**。</p>
</blockquote>
<h3 id="3-列表"><a href="#3-列表" class="headerlink" title="3. 列表"></a>3. 列表</h3><blockquote>
<p>列表可以用于流程分析，提示，重点内容标记，<strong>分别有，有序列表，无序列表，任务列表</strong></p>
</blockquote>
<blockquote>
<p>有序列表 <strong><code>Ctrl + Shift + [</code></strong></p>
<ol>
<li>流程一<ol>
<li>步骤一</li>
<li>步骤二<ol>
<li>流程一，步骤一，内容一</li>
</ol>
</li>
</ol>
</li>
<li>流程二</li>
<li>流程三</li>
</ol>
</blockquote>
<blockquote>
<p>无序列表 <strong><code>Ctrl + Shift + ]</code></strong></p>
<ul>
<li>咖啡<ul>
<li>拿铁<ul>
<li>生椰拿铁</li>
<li>丝绒拿铁</li>
<li>陨石拿铁</li>
</ul>
</li>
<li>美式</li>
</ul>
</li>
<li>茶<ul>
<li>绿茶<ul>
<li>信阳毛尖</li>
<li>碧螺春</li>
<li>龙井</li>
</ul>
</li>
<li>红茶<ul>
<li>大红包</li>
</ul>
</li>
<li>白茶</li>
</ul>
</li>
<li>酒</li>
</ul>
</blockquote>
<blockquote>
<p>任务列表，没有快捷键需要通过菜单栏 –&gt; 段落 –&gt; 任务列表中使用</p>
<ul>
<li><input disabled="" type="checkbox"> 每日作业，案例代码三遍</li>
<li><input disabled="" type="checkbox"> 每日练习，打字练习目标 200 英文一分钟</li>
</ul>
</blockquote>
<h3 id="4-超链接"><a href="#4-超链接" class="headerlink" title="4. 超链接"></a>4. 超链接</h3><blockquote>
<p>快捷方式 <strong><code>Ctrl + K</code></strong></p>
</blockquote>
<p><a href="https://www.163.com/dy/article/J0FACBT70553TDTR.html">标题</a></p>
<h3 id="5-图片"><a href="#5-图片" class="headerlink" title="5. 图片"></a>5. 图片</h3><blockquote>
<p>快捷方式 <strong><code>Ctrl + Shift + I</code></strong></p>
<p>图片路径支持本地图片，同时支持<strong>超连接图片</strong></p>
</blockquote>
<p><img src="https://img2.baidu.com/it/u=2435866163,3687824417&amp;fm=253&amp;fmt=auto&amp;app=138&amp;f=JPEG?w=1200&amp;h=800"></p>
<p><img src="/img/01.jpg"></p>
<h3 id="6-表格"><a href="#6-表格" class="headerlink" title="6. 表格"></a>6. 表格</h3><blockquote>
<p>快捷键 <strong><code>Ctrl + T</code></strong></p>
</blockquote>
<table>
<thead>
<tr>
<th align="center">ID</th>
<th align="center">Name</th>
<th align="center">Age</th>
</tr>
</thead>
<tbody><tr>
<td align="center">1</td>
<td align="center">张三</td>
<td align="center">16</td>
</tr>
<tr>
<td align="center">2</td>
<td align="center">李四</td>
<td align="center">17</td>
</tr>
<tr>
<td align="center">3</td>
<td align="center">王五</td>
<td align="center">18</td>
</tr>
</tbody></table>
<h3 id="7-代码块"><a href="#7-代码块" class="headerlink" title="7. 代码块"></a>7. 代码块</h3><blockquote>
<p>代码块内容一般不通过快捷键方式 ，通过 ``` 引入目标代码块，并且可以选择代码块中的代码语言是哪一个。</p>
</blockquote>
<figure class="highlight c"><table><tbody><tr><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">(<span class="hljs-type">int</span> argc, <span class="hljs-type">char</span> * argv[])</span><br>{<br>	<span class="hljs-built_in">printf</span>(<span class="hljs-string">"Hello World!\n"</span>);   <br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>}<br></code></pre></td></tr></tbody></table></figure>

<h3 id="8-其他补充"><a href="#8-其他补充" class="headerlink" title="8. 其他补充"></a>8. 其他补充</h3><blockquote>
<p>加粗 <code>Ctrl + B</code>，<strong>案例</strong></p>
<p>斜体 <code>Ctrl + I</code>，<em>案例</em></p>
<p>下划线 <code>Ctrl + U</code>，<u>案例</u></p>
<p>删除线 <code>Shift + Alt + 5</code>，<del>案例</del></p>
<p><em><strong><u><del>综合案例</del></u></strong></em></p>
</blockquote>
]]></content>
  </entry>
  <entry>
    <title>Qexo docker部署</title>
    <url>/2024/05/08/22/</url>
    <content><![CDATA[<h1 id="Qexo-docker部署"><a href="#Qexo-docker部署" class="headerlink" title="Qexo docker部署"></a>Qexo docker部署</h1><p><strong>Qexo</strong> 是一个快速、强大、美观的在线 <strong>静态博客编辑器</strong>。使用 GPL3.0 <strong>开源</strong>协议。支持包括且不限于在 <strong>Vercel</strong> 等平台部署, 为您的静态博客添加<strong>动态</strong>的元素。使用<strong>Qexo</strong>可以管理Hexo友链、文章管理、站点统计、发布说说等多种功能，这篇文章是用其中一种方式部署，采用Vercel（PostgreSQL/SupaBase）的方式进行部署，想了解更多功能介绍和部署方式可以查看<a href="https://www.oplog.cn/qexo/">官方文档</a>。</p>
<span id="more"></span>

<h2 id="1-docker部署"><a href="#1-docker部署" class="headerlink" title="1. docker部署"></a>1. docker部署</h2><h3 id="1-1-下载Qexo-项目压缩包并解压上传至部署服务器"><a href="#1-1-下载Qexo-项目压缩包并解压上传至部署服务器" class="headerlink" title="1.1 下载Qexo 项目压缩包并解压上传至部署服务器"></a>1.1 下载<a href="https://github.com/Qexo/Qexo/releases/">Qexo 项目压缩包</a>并解压上传至部署服务器</h3><h3 id="1-2-在manage-py的同级目录下创建或修改-configs-py，修改内容如下："><a href="#1-2-在manage-py的同级目录下创建或修改-configs-py，修改内容如下：" class="headerlink" title="1.2 在manage.py的同级目录下创建或修改 configs.py，修改内容如下："></a>1.2 在<code>manage.py</code>的同级目录下创建或修改 <code>configs.py</code>，修改内容如下：</h3><figure class="highlight python"><table><tbody><tr><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> pymysql<br>pymysql.install_as_MySQLdb()<br>DOMAINS = [<span class="hljs-string">"127.0.0.1"</span>, <span class="hljs-string">"yoursite.com"</span>] <span class="hljs-comment">#"yoursite.com"为允许访问的网址</span><br>DATABASES = {<br>    <span class="hljs-string">'default'</span>: {<br>            <span class="hljs-string">'ENGINE'</span>: <span class="hljs-string">'django.db.backends.mysql'</span>,<br>            <span class="hljs-string">'NAME'</span>: <span class="hljs-string">'qexo'</span>, <span class="hljs-comment">#数据库表名</span><br>            <span class="hljs-string">'USER'</span>: <span class="hljs-string">'root'</span>, <span class="hljs-comment">#数据库用户名</span><br>            <span class="hljs-string">'PASSWORD'</span>: <span class="hljs-string">'password'</span>, <span class="hljs-comment">#数据库密码</span><br>            <span class="hljs-string">'HOST'</span>: <span class="hljs-string">'127.0.0.1'</span>,<br>            <span class="hljs-string">'PORT'</span>: <span class="hljs-string">'3306'</span>,<br>            <span class="hljs-string">'OPTIONS'</span>: {<br>                <span class="hljs-string">"init_command"</span>: <span class="hljs-string">"SET sql_mode='STRICT_TRANS_TABLES'"</span><br>            }<br>    }<br>}<br></code></pre></td></tr></tbody></table></figure>

<h3 id="1-3-在manage-py的同级目录下创建或修改-docker-file，修改内容如下："><a href="#1-3-在manage-py的同级目录下创建或修改-docker-file，修改内容如下：" class="headerlink" title="1.3 在manage.py的同级目录下创建或修改 docker file，修改内容如下："></a>1.3 在<code>manage.py</code>的同级目录下创建或修改 <code>docker file</code>，修改内容如下：</h3><figure class="highlight yaml"><table><tbody><tr><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">FROM</span> <span class="hljs-string">python:3.11</span><br><span class="hljs-string">WORKDIR</span> <span class="hljs-string">/root</span><br><span class="hljs-string">COPY</span> <span class="hljs-string">.</span> <span class="hljs-string">.</span><br><br><span class="hljs-string">ARG</span> <span class="hljs-string">CN=true</span><br><span class="hljs-string">RUN</span> <span class="hljs-string">if</span> [ <span class="hljs-string">"$CN"</span> <span class="hljs-string">=</span> <span class="hljs-string">"true"</span> ]<span class="hljs-string">;</span> <span class="hljs-string">then</span> <span class="hljs-string">\</span><br>        <span class="hljs-string">pip</span> <span class="hljs-string">config</span> <span class="hljs-string">set</span> <span class="hljs-string">global.index-url</span> <span class="hljs-string">https://pypi.tuna.tsinghua.edu.cn/simple/</span> <span class="hljs-string">&amp;&amp;</span> <span class="hljs-string">\</span><br>        <span class="hljs-string">pip</span> <span class="hljs-string">config</span> <span class="hljs-string">set</span> <span class="hljs-string">global.trusted-host</span> <span class="hljs-string">pypi.tuna.tsinghua.edu.cn;</span> <span class="hljs-string">\</span><br>    <span class="hljs-string">fi</span><br><br><span class="hljs-string">RUN</span> <span class="hljs-string">python</span> <span class="hljs-string">-m</span> <span class="hljs-string">pip</span> <span class="hljs-string">install</span> <span class="hljs-string">--upgrade</span> <span class="hljs-string">pip</span> <span class="hljs-string">&amp;&amp;</span> <span class="hljs-string">\</span><br>    <span class="hljs-string">pip</span> <span class="hljs-string">install</span> <span class="hljs-string">-r</span> <span class="hljs-string">requirements.txt</span> <span class="hljs-string">&amp;&amp;</span> <span class="hljs-string">\</span><br>    <span class="hljs-string">python3</span> <span class="hljs-string">manage.py</span> <span class="hljs-string">makemigrations</span> <span class="hljs-string">&amp;&amp;</span> <span class="hljs-string">\</span><br>    <span class="hljs-string">python3</span> <span class="hljs-string">manage.py</span> <span class="hljs-string">migrate</span><br><br><span class="hljs-string">EXPOSE</span> <span class="hljs-number">3000 </span><span class="hljs-number">8000</span><br><br><span class="hljs-string">CMD</span> [<span class="hljs-string">"python3"</span>, <span class="hljs-string">"manage.py"</span>, <span class="hljs-string">"runserver"</span>, <span class="hljs-string">"0.0.0.0:8000"</span>, <span class="hljs-string">"--noreload"</span> ]<br></code></pre></td></tr></tbody></table></figure>

<h3 id="1-4-构建docker镜像"><a href="#1-4-构建docker镜像" class="headerlink" title="1.4 构建docker镜像"></a>1.4 构建docker镜像</h3><blockquote>
<p>后面记得有 “<strong>.</strong>“</p>
</blockquote>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><code class="hljs bash">docker build -t qexo:3.1.0 .<br></code></pre></td></tr></tbody></table></figure>

<h3 id="1-5-运行容器"><a href="#1-5-运行容器" class="headerlink" title="1.5 运行容器"></a>1.5 运行容器</h3><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><code class="hljs bash">docker run -d -p 8000:8000 -v /hexo/blog:/app/blog --name qexo qexo:3.1.0<br></code></pre></td></tr></tbody></table></figure>

<h2 id="2-Qexo配置"><a href="#2-Qexo配置" class="headerlink" title="2. Qexo配置"></a>2. Qexo配置</h2><p>在浏览器输入宿主服务器网址+端口号进入Qexo后台，按照界面提示完成设置</p>
<h3 id="2-1-本地部署"><a href="#2-1-本地部署" class="headerlink" title="2.1 本地部署"></a>2.1 本地部署</h3><p><img src="https://raw.githubusercontent.com/xiutrim/Images/main/img/qexo_%E6%9C%AC%E5%9C%B0%E9%85%8D%E7%BD%AE.png"></p>
<h3 id="2-2-Github部署"><a href="#2-2-Github部署" class="headerlink" title="2.2 Github部署"></a>2.2 Github部署</h3><p><img src="https://raw.githubusercontent.com/xiutrim/Images/main/img/qexo_github.png"></p>
<ul>
<li>Github 密钥：于 Github 设置 生成的 Token (建议使用 Classical) 需要 Repo &amp; Workflow 下的权限 <strong>不建议给出所有权限</strong><ul>
<li>Github主页 -&gt; Settings -&gt; Developer settings -&gt; Personal access tokens -&gt; Tokens(classic) -&gt; Generate new token</li>
</ul>
</li>
<li>Github 仓库：博客源码 自动化部署所在的仓库</li>
<li>项目分支：博客源码 自动化部署所在仓库的分支</li>
<li>博客路径：博客源码 自动化部署所在仓库的路径 若为根目录请留空</li>
</ul>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Qexo</tag>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu 基本配置和 MarkDown 文档使用教程</title>
    <url>/2024/05/02/26/</url>
    <content><![CDATA[<h2 id="Ubuntu-基本配置"><a href="#Ubuntu-基本配置" class="headerlink" title="Ubuntu 基本配置"></a>Ubuntu 基本配置</h2><h3 id="1-Ubuntu-概述"><a href="#1-Ubuntu-概述" class="headerlink" title="1. Ubuntu 概述"></a>1. Ubuntu 概述</h3><blockquote>
<p>Ubuntu 是一个流行的基于 Linux 的操作系统，它是由南非的一家公司 Canonical Ltd. 开发和维护的。Ubuntu 基于 Debian 发行版，以其用户友好性、稳定性和免费开源的特点而闻名。</p>
<p>嵌入式设备驱动编程和设备所需系统基本首选 Ubuntu 系统。</p>
</blockquote>
<h3 id="2-VMTools-安装"><a href="#2-VMTools-安装" class="headerlink" title="2. VMTools 安装"></a>2. VMTools 安装</h3><blockquote>
<p>VMTools  VMWare 软件针对于虚拟机内部从操作系统，提供的一个辅助插件，可以更好的适配当前虚拟机系统内容，同时可以打通 Windows 操作系统和 VMWare 内部虚拟机之间的关系。</p>
</blockquote>
<blockquote>
<p>Ubuntu 虚拟机启动之后选择安装 VMWare Tools</p>
</blockquote>
<img src="https://dlink.host/sharepoint/aHR0cHM6Ly94aXV0cmltLW15LnNoYXJlcG9pbnQuY29tLzppOi9nL3BlcnNvbmFsL2JfeGl1dHJpbV9vbm1pY3Jvc29mdF9jb20vRVdPbTVPQXdYYjlCdDdYLWFOQkl3N29CTUlYN2E3X09tNFJKQnROUHplb1ljZz9lPWZGMjNIeA.png" style="zoom:67%;">

<blockquote>
<p>找到对应的光驱位置，打开VMWare Tools 光盘内容，同步解压</p>
</blockquote>
<img src="https://dlink.host/sharepoint/aHR0cHM6Ly94aXV0cmltLW15LnNoYXJlcG9pbnQuY29tLzppOi9nL3BlcnNvbmFsL2JfeGl1dHJpbV9vbm1pY3Jvc29mdF9jb20vRVVkRVJTNl9nWkJCaTdPcUs0emNhZVlCY2M2bEtPaTRDRTJuaWRqd0drWjJGdz9lPWdzRlJYaw.png" style="zoom:67%;">

<blockquote>
<p>提取压缩包内容到目标文件夹</p>
</blockquote>
<img src="https://dlink.host/sharepoint/aHR0cHM6Ly94aXV0cmltLW15LnNoYXJlcG9pbnQuY29tLzppOi9nL3BlcnNvbmFsL2JfeGl1dHJpbV9vbm1pY3Jvc29mdF9jb20vRWFCS3hLZmFvbkJGZ1VENU8xTU5NejRCTGpPM2hhRGFqZGhRMFhFSU9rbk9UZz9lPXAwQkNjOA.png" style="zoom:67%;">

<blockquote>
<p>解压之后的桌面效果</p>
</blockquote>
<img src="https://dlink.host/sharepoint/aHR0cHM6Ly94aXV0cmltLW15LnNoYXJlcG9pbnQuY29tLzppOi9nL3BlcnNvbmFsL2JfeGl1dHJpbV9vbm1pY3Jvc29mdF9jb20vRVpySllPRXd3cjFNakU1OXhSZlZTYklCQW12ZFdxTzhLNTNiOEROR21kbGtwdz9lPWZaMWhkeg.png" style="zoom:67%;">

<blockquote>
<p>终端打开目标文件夹</p>
</blockquote>
<img src="https://dlink.host/sharepoint/aHR0cHM6Ly94aXV0cmltLW15LnNoYXJlcG9pbnQuY29tLzppOi9nL3BlcnNvbmFsL2JfeGl1dHJpbV9vbm1pY3Jvc29mdF9jb20vRWNoMjFHVFo5NTlJczU1cVNSSnhSRU1CcHk3QW95ZUhfaE1KR3k0R2hHaUxOZz9lPWdXVzdiZQ.png" style="zoom:67%;">

<blockquote>
<p>终端打开效果</p>
</blockquote>
<img src="https://dlink.host/sharepoint/aHR0cHM6Ly94aXV0cmltLW15LnNoYXJlcG9pbnQuY29tLzppOi9nL3BlcnNvbmFsL2JfeGl1dHJpbV9vbm1pY3Jvc29mdF9jb20vRVVQdUdXbEtYQVpLdTZGNFp2X3VTTVVCNVVIVHVhTFMzQVphdjktdDduNjhyUT9lPVZaejZveQ.png" style="zoom:67%;">

<blockquote>
<p>执行目标命令，同时确认安装 VMWare Tools</p>
</blockquote>
<img src="https://dlink.host/sharepoint/aHR0cHM6Ly94aXV0cmltLW15LnNoYXJlcG9pbnQuY29tLzppOi9nL3BlcnNvbmFsL2JfeGl1dHJpbV9vbm1pY3Jvc29mdF9jb20vRVJCVVNOamxpZHRBZ1hOeEtqLXNmdk1Cc1JYdXdFcUdVUTFfQmFXX2dwa0VCdz9lPU51TW5GMA.png" style="zoom:67%;">

<blockquote>
<p>VMWare Tools 安装成功</p>
</blockquote>
<img src="https://dlink.host/sharepoint/aHR0cHM6Ly94aXV0cmltLW15LnNoYXJlcG9pbnQuY29tLzppOi9nL3BlcnNvbmFsL2JfeGl1dHJpbV9vbm1pY3Jvc29mdF9jb20vRWZwbjFrc0t0NmxGamVDZGN4bGRJRGtCRjF2Ulk1aHFhenZiTG9ybUJjVkJ4UT9lPU9panIyWQ.png" style="zoom:67%;">

<blockquote>
<p>系统登出之后生效</p>
</blockquote>
<img src="https://dlink.host/sharepoint/aHR0cHM6Ly94aXV0cmltLW15LnNoYXJlcG9pbnQuY29tLzppOi9nL3BlcnNvbmFsL2JfeGl1dHJpbV9vbm1pY3Jvc29mdF9jb20vRVQ4MThaUjNEUjFHbWtjdU5xT0tXQ01CQ0xjc2dBXzBsT1pEZTMwbTNwanQ4UT9lPXJ0YWZBcw.png" style="zoom:67%;">

<h3 id="3-更新数据源"><a href="#3-更新数据源" class="headerlink" title="3. 更新数据源"></a>3. 更新数据源</h3><blockquote>
<p>Ubuntu 有【软件中心】，软件中心可以提供软件安装内容，一般情况下 Ubuntu 默认的软件数据源都是国外镜像，会影响软件更新速度，甚至于无法更新。一般会选择国内的数据源进行软件安装和更新。比较常用的数据源</p>
<ul>
<li>阿里巴巴数据源</li>
<li>清华大学数据源</li>
</ul>
<p>当前安装的 Ubuntu 默认软件源是 清华大学数据源，完成【数据源更新】操作</p>
</blockquote>
<blockquote>
<p>桌面终端打开</p>
</blockquote>
<p><img src="https://dlink.host/sharepoint/aHR0cHM6Ly94aXV0cmltLW15LnNoYXJlcG9pbnQuY29tLzppOi9nL3BlcnNvbmFsL2JfeGl1dHJpbV9vbm1pY3Jvc29mdF9jb20vRWZKeTdWZ1Fpc3hPalg4WjM1YWJfeGtCOFVuNzdEdVFVdGtYT3JTMnJkVngxUT9lPWRkUkw3Vg.png"></p>
<figure class="highlight shell"><table><tbody><tr><td class="code"><pre><code class="hljs shell">qf@qf:~$ # 更新数据源操作<br>qf@qf:~$ sudo apt-get update<br></code></pre></td></tr></tbody></table></figure>

<p><img src="https://dlink.host/sharepoint/aHR0cHM6Ly94aXV0cmltLW15LnNoYXJlcG9pbnQuY29tLzppOi9nL3BlcnNvbmFsL2JfeGl1dHJpbV9vbm1pY3Jvc29mdF9jb20vRWJQNXhwRmdfdUZMbmRFM2pQeUllNWdCQ0VOZ2ZheUd6SlI3Z0JhUHdnY1ZNdz9lPTFCUXpJQw.png"></p>
<h3 id="4-必要软件安装"><a href="#4-必要软件安装" class="headerlink" title="4. 必要软件安装"></a>4. 必要软件安装</h3><blockquote>
<p>安装确认以下软件</p>
<ul>
<li>编译工具 GCC G++</li>
<li>共享文件夹 Samba</li>
<li>SSH 信道 openssh-server</li>
<li>编辑工具 vim</li>
</ul>
</blockquote>
<blockquote>
<p>安装命令</p>
<figure class="highlight shell"><table><tbody><tr><td class="code"><pre><code class="hljs shell">sudo apt-get install 软件名称<br></code></pre></td></tr></tbody></table></figure>

<p>安装目标软件</p>
<figure class="highlight shell"><table><tbody><tr><td class="code"><pre><code class="hljs shell">sudo apt-get install gcc # 系统默认就是最新版本<br>sudo apt-get install g++ # 系统默认就是最新版本<br>sudo apt-get install vim # 需要确认安装 【编辑工具】<br>sudo apt-get install ctags # 需要确认安装 【编辑工具辅助插件】<br>sudo apt-get install samba # 需要确认安装 【共享文件夹软件】<br>sudo apt-get install openssh-server # 远程访问工具服务器软件，可以提供 SSH 方式访问操作服务器内容。<br></code></pre></td></tr></tbody></table></figure>
</blockquote>
<h3 id="5-Samba-共享文件夹服务配置"><a href="#5-Samba-共享文件夹服务配置" class="headerlink" title="5. Samba 共享文件夹服务配置"></a>5. Samba 共享文件夹服务配置</h3><blockquote>
<p>Samba 需要配置共享文件夹对应的路径，权限和用户账号。</p>
</blockquote>
<blockquote>
<p>编辑 Samba 配置文件</p>
<p>通过终端，利用 gedit 文本编辑器打开目标 samba 服务器配置文件</p>
<figure class="highlight shell"><table><tbody><tr><td class="code"><pre><code class="hljs shell">sudo gedit /etc/samba/smb.conf<br></code></pre></td></tr></tbody></table></figure>
</blockquote>
<blockquote>
<p>在打开的配置文件末尾添加以下内容，根据个人电脑内容修改</p>
<ul>
<li>仅需要将所有的 qf 修改为个人电脑登录用户名称</li>
</ul>
</blockquote>
<figure class="highlight abnf"><table><tbody><tr><td class="code"><pre><code class="hljs abnf">[qf]<br>    comment <span class="hljs-operator">=</span> samba home directory <br>    path <span class="hljs-operator">=</span> /home/qf<br>    public <span class="hljs-operator">=</span> yes<br>    browseable <span class="hljs-operator">=</span> yes<br>    public <span class="hljs-operator">=</span> yes<br>    read only <span class="hljs-operator">=</span> no<br>    valid users <span class="hljs-operator">=</span> qf<br>    create mask <span class="hljs-operator">=</span> <span class="hljs-number">0777</span><br>    directory mask <span class="hljs-operator">=</span> <span class="hljs-number">0777</span> <br>    force user <span class="hljs-operator">=</span> qf<br>    force group <span class="hljs-operator">=</span> qf<br>    available <span class="hljs-operator">=</span> yes<br></code></pre></td></tr></tbody></table></figure>

<img src="https://dlink.host/sharepoint/aHR0cHM6Ly94aXV0cmltLW15LnNoYXJlcG9pbnQuY29tLzppOi9nL3BlcnNvbmFsL2JfeGl1dHJpbV9vbm1pY3Jvc29mdF9jb20vRWV3NlFCTDJxU3hEakpzZjFhbmhWQjRCOERhQUlaZk41LS1RdFlCUUFiVXIzdz9lPVBKemtUYg.png" style="zoom:67%;">

<blockquote>
<p>注册用户，同时重启 Samba 服务器</p>
<figure class="highlight shell"><table><tbody><tr><td class="code"><pre><code class="hljs shell">sudo smbpasswd -a qf # -a 之后是对应当前 Samba 服务器登录用户<br></code></pre></td></tr></tbody></table></figure>

<ul>
<li>需要输入两次密码进行确认，密码同样是登录 Samba 服务器对应密码，</li>
</ul>
</blockquote>
<p><img src="https://dlink.host/sharepoint/aHR0cHM6Ly94aXV0cmltLW15LnNoYXJlcG9pbnQuY29tLzppOi9nL3BlcnNvbmFsL2JfeGl1dHJpbV9vbm1pY3Jvc29mdF9jb20vRVdRMDlpTlZKRE5Ea1h3MHNZRzJTTVFCelAzTWMyQ1RzczRxTnZqNVMyOVNNdz9lPW1yQkkyeQ.png"></p>
<blockquote>
<p>重启 Samba 服务器，生效当前配置操作和用户注册操作</p>
<figure class="highlight shell"><table><tbody><tr><td class="code"><pre><code class="hljs shell">sudo /etc/init.d/smbd restart<br></code></pre></td></tr></tbody></table></figure>
</blockquote>
<p><img src="https://dlink.host/sharepoint/aHR0cHM6Ly94aXV0cmltLW15LnNoYXJlcG9pbnQuY29tLzppOi9nL3BlcnNvbmFsL2JfeGl1dHJpbV9vbm1pY3Jvc29mdF9jb20vRVRPemp6S0p6azlHZzdReThzbFN6TUVCVUswbHl0aXRwOW56N2tjSDMtNWlEUT9lPUsxUVJTMQ.png"></p>
<blockquote>
<p>确认 IP 地址和 Windows 远程连接目标 IP Samba 服务器</p>
</blockquote>
<p><img src="https://dlink.host/sharepoint/aHR0cHM6Ly94aXV0cmltLW15LnNoYXJlcG9pbnQuY29tLzppOi9nL3BlcnNvbmFsL2JfeGl1dHJpbV9vbm1pY3Jvc29mdF9jb20vRWM3T0NoRG9PaWxDbG9QV2FrZ2M4emdCNHBrWWljUU1GcThwY2JjZ1RJanRyUT9lPW16bUR3Vw.png"></p>
<img src="https://dlink.host/sharepoint/aHR0cHM6Ly94aXV0cmltLW15LnNoYXJlcG9pbnQuY29tLzppOi9nL3BlcnNvbmFsL2JfeGl1dHJpbV9vbm1pY3Jvc29mdF9jb20vRWFwbC02RU5rSHRJZzJFM0g0ZHZQMXNCWklTZnZqVUpkdFJ3NVZtM0hUeU05UT9lPUd6SlNiTg.png" alt="16-Windows输入Samba 服务用户和命名" style="zoom:67%;">

<h3 id="6-vim-编辑器配置"><a href="#6-vim-编辑器配置" class="headerlink" title="6. vim 编辑器配置"></a>6. vim 编辑器配置</h3><blockquote>
<p>配置 Vim 编辑器，提供必要的颜色提示，缩进操作，行号提示等内容</p>
</blockquote>
<p><img src="https://dlink.host/sharepoint/aHR0cHM6Ly94aXV0cmltLW15LnNoYXJlcG9pbnQuY29tLzppOi9nL3BlcnNvbmFsL2JfeGl1dHJpbV9vbm1pY3Jvc29mdF9jb20vRVlQSEpsWE1DR0JBdE1sWExXNFVCd3NCYWdUQUNVUC1GRHUxWTIyRC1xcFh6Zz9lPU5rRnlKUA.png"></p>
]]></content>
  </entry>
  <entry>
    <title>Vim操作和第一行代码</title>
    <url>/2024/05/03/14/</url>
    <content><![CDATA[<hr>
<p>[toc]</p>
<h2 id="Vim操作和第一行代码"><a href="#Vim操作和第一行代码" class="headerlink" title="Vim操作和第一行代码"></a>Vim操作和第一行代码</h2><h4 id="1-Vim-编辑器"><a href="#1-Vim-编辑器" class="headerlink" title="1. Vim 编辑器"></a>1. Vim 编辑器</h4><h5 id="1-1-Vim-概述"><a href="#1-1-Vim-概述" class="headerlink" title="1.1 Vim 概述"></a>1.1 Vim 概述</h5><blockquote>
<p>Vim 是一个经典的文本编辑器，特别适用于在终端环境下进行编辑。它具有高度的可定制性和丰富的功能，是程序员和系统管理员的首选工具之一。Vim 具有很多强大的特性，包括多级撤销、语法高亮、代码折叠、插件支持等等。</p>
</blockquote>
<h5 id="1-2-vim-三种模式"><a href="#1-2-vim-三种模式" class="headerlink" title="1.2 vim 三种模式"></a>1.2 vim 三种模式</h5><p><img src="https://raw.githubusercontent.com/xiutrim/Images/main/img/04-vim%E4%B8%8D%E5%90%8C%E7%9A%84%E6%A8%A1%E5%BC%8F%E6%A6%82%E8%BF%B0.png"></p>
<h5 id="1-3-vim-插入模式"><a href="#1-3-vim-插入模式" class="headerlink" title="1.3 vim 插入模式"></a>1.3 vim 插入模式</h5><blockquote>
<p>插入模式在 Vim 左下角有对应的提示，告知用户当前是插入模式。可以直接写代码，修改文本等一系列操作。</p>
</blockquote>
<h5 id="1-4-vim-编辑模式"><a href="#1-4-vim-编辑模式" class="headerlink" title="1.4 vim 编辑模式"></a>1.4 vim 编辑模式</h5><blockquote>
<p>编辑模式，可以通过指令进行文本内容拷贝，删除，剪切，定位….</p>
</blockquote>
<table>
<thead>
<tr>
<th align="center">指令</th>
<th align="center">功能描述</th>
</tr>
</thead>
<tbody><tr>
<td align="center">i</td>
<td align="center">在光标所在位置进入插入模式</td>
</tr>
<tr>
<td align="center">o</td>
<td align="center">在光标所在位置另起一行进入插入模式</td>
</tr>
<tr>
<td align="center">a</td>
<td align="center">在光标所在位置向后一格进入插入模式</td>
</tr>
<tr>
<td align="center">yy</td>
<td align="center">复制光标所在行内容</td>
</tr>
<tr>
<td align="center">y[n]y or [n]yy</td>
<td align="center">n表示行数，从光标所在位置开始复制 n 行内容</td>
</tr>
<tr>
<td align="center">p</td>
<td align="center">在光标所在位置粘贴【剪切板】存储内容</td>
</tr>
<tr>
<td align="center">dd</td>
<td align="center">剪切光标所在行内容</td>
</tr>
<tr>
<td align="center">d[n]d or [n]dd</td>
<td align="center">n表示行数，从光标所在位置开始剪切 n 行内容</td>
</tr>
<tr>
<td align="center">gg or ngg</td>
<td align="center">跳转当前文档中的指定哪一个行，gg 表示首行</td>
</tr>
<tr>
<td align="center">u</td>
<td align="center">撤销当前操作</td>
</tr>
</tbody></table>
<h5 id="1-5-vim-命令模式"><a href="#1-5-vim-命令模式" class="headerlink" title="1.5 vim 命令模式"></a>1.5 vim 命令模式</h5><blockquote>
<p>一般用于关闭，打开，保存文档内容</p>
</blockquote>
<table>
<thead>
<tr>
<th align="center">常用命令</th>
<th align="center">功能概述</th>
</tr>
</thead>
<tbody><tr>
<td align="center">q</td>
<td align="center">退出，但是如果文档已经修改，无法直接利用 q 退出</td>
</tr>
<tr>
<td align="center">q!</td>
<td align="center">强制退出，不保存当前修改的文档内容</td>
</tr>
<tr>
<td align="center">w</td>
<td align="center">保存当前文档内容到硬盘</td>
</tr>
<tr>
<td align="center">wa</td>
<td align="center">保存 vim 打开的所有文档内容到硬盘</td>
</tr>
<tr>
<td align="center">wq</td>
<td align="center">保存+退出</td>
</tr>
<tr>
<td align="center">wqa</td>
<td align="center">保存退出当前 vim 打开的所有文件内容</td>
</tr>
<tr>
<td align="center">vsplit 文件名</td>
<td align="center">可以打开其他文档</td>
</tr>
</tbody></table>
<h5 id="1-6-vim-常见的小错误和解决方案"><a href="#1-6-vim-常见的小错误和解决方案" class="headerlink" title="1.6 vim 常见的小错误和解决方案"></a>1.6 vim 常见的小错误和解决方案</h5><h6 id="1-6-1-Windows-Ctrl-S-习惯保存文档问题"><a href="#1-6-1-Windows-Ctrl-S-习惯保存文档问题" class="headerlink" title="1.6.1 Windows Ctrl + S 习惯保存文档问题"></a>1.6.1 Windows Ctrl + S 习惯保存文档问题</h6><blockquote>
<p>如果不小心使用 Ctrl + S 习惯保存文档，会导致当前 Vim 无法进行任何的编译效果，进入【快照模式】，需要利用 Ctrl + Q 退出，进入正常的 vim 模式</p>
</blockquote>
<h6 id="1-6-2-非法关闭-vim-文档，导致【幽灵文件】"><a href="#1-6-2-非法关闭-vim-文档，导致【幽灵文件】" class="headerlink" title="1.6.2 非法关闭 vim 文档，导致【幽灵文件】"></a>1.6.2 非法关闭 vim 文档，导致【幽灵文件】</h6><blockquote>
<p>因为计算机在打开任何文件的情况下，都会在对应目录中利用隐藏文件进行临时备份，同时利用隐藏文件辅助其他功能使用，非正常 vim 关闭，会导致计算机未对临时隐藏文件进行删除操作，导致下一次打开文档报错！</p>
<ul>
<li>vim 保存按照正常流程操作</li>
<li>如果出现了对应的隐藏文件，利用 rm 命令删除</li>
</ul>
</blockquote>
<h4 id="2-C-第一行代码"><a href="#2-C-第一行代码" class="headerlink" title="2. C++ 第一行代码"></a>2. C++ 第一行代码</h4><h5 id="2-1-hello-world"><a href="#2-1-hello-world" class="headerlink" title="2.1 hello world"></a>2.1 hello world</h5><blockquote>
<p>世界上程序对于人类的第一条问候，也是每一个语言第一个程式。</p>
</blockquote>
<figure class="highlight c++"><table><tbody><tr><td class="code"><pre><code class="hljs c++"><span class="hljs-comment">// 导入必要的头文件，iostream 是 C++ 标准输入输出库头文件</span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;iostream&gt;</span></span><br><br><span class="hljs-comment">/*</span><br><span class="hljs-comment"> * 使用命名空间 std，选择使用不同打命名空间会有不同的</span><br><span class="hljs-comment"> * 模式，后续讲解。</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-type">int</span> argc, <span class="hljs-type">char</span> * argv[])</span></span><br><span class="hljs-function"></span>{<br>	<span class="hljs-comment">/*</span><br><span class="hljs-comment">	cout 是控制台打印展示</span><br><span class="hljs-comment">	endl 换行结束</span><br><span class="hljs-comment">	*/</span><br>	cout &lt;&lt; <span class="hljs-string">"Hello World!"</span> &lt;&lt; endl;<br><br>	<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>}<br></code></pre></td></tr></tbody></table></figure>

<h5 id="2-2-编译执行-C-程序"><a href="#2-2-编译执行-C-程序" class="headerlink" title="2.2 编译执行 C++ 程序"></a>2.2 编译执行 C++ 程序</h5><blockquote>
<p>任何一个程序完成之后，都需要编译方式告知计算机如何执行。利用 G++ 编译器将可视化 CPP 文件编译为可执行的二进制文件 a.out ，执行 a.out 内容执行程序。</p>
</blockquote>
<blockquote>
<p>编译格式</p>
<figure class="highlight shell"><table><tbody><tr><td class="code"><pre><code class="hljs shell">g++ 目标文件名称.cpp<br></code></pre></td></tr></tbody></table></figure>

<p>操作之后会自动生成 a.out 文件，a.out 文件是 Linux 默认的可执行程序。</p>
</blockquote>
<blockquote>
<p>执行程序</p>
<p>a.out 就是目标可执行程序，执行方式</p>
<figure class="highlight shell"><table><tbody><tr><td class="code"><pre><code class="hljs shell">./a.out # 表示执行当前工作目录下的 a.out 程序<br></code></pre></td></tr></tbody></table></figure>
</blockquote>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2024/05/04/21/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<span id="more"></span>

<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">"My New Post"</span><br></code></pre></td></tr></tbody></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></tbody></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></tbody></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></tbody></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
</search>
